// <auto-generated />
using System;
using DroneAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DroneAPI.Migrations
{
    [DbContext(typeof(DroneAPIContext))]
    [Migration("20220715080549_InitialDatabase1")]
    partial class InitialDatabase1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DroneAPI.Models.BatteryLevelEventLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("CurrentBatteryLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PreviousBatteryLevel")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BatteryLevelEventLog");
                });

            modelBuilder.Entity("DroneAPI.Models.Drone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("BatteryCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("SerialNumber");

                    b.Property<decimal>("WeightLimit")
                        .HasColumnType("decimal")
                        .HasColumnName("WeightLimit");

                    b.Property<int>("model")
                        .HasColumnType("int");

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Drone");
                });

            modelBuilder.Entity("DroneAPI.Models.LoadedMedicineModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateLoaded")
                        .HasColumnType("datetime2");

                    b.Property<int>("DroneId")
                        .HasColumnType("int");

                    b.Property<int>("medicationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DroneId");

                    b.HasIndex("medicationId");

                    b.ToTable("LoadedMedicineModel");
                });

            modelBuilder.Entity("DroneAPI.Models.MedicationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal")
                        .HasColumnName("WeightLimit");

                    b.HasKey("Id");

                    b.ToTable("MedicationModel");
                });

            modelBuilder.Entity("DroneAPI.Models.LoadedMedicineModel", b =>
                {
                    b.HasOne("DroneAPI.Models.Drone", "Drone")
                        .WithMany()
                        .HasForeignKey("DroneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DroneAPI.Models.MedicationModel", "Medication")
                        .WithMany()
                        .HasForeignKey("medicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drone");

                    b.Navigation("Medication");
                });
#pragma warning restore 612, 618
        }
    }
}
